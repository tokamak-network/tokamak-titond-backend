// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/components": {
            "get": {
                "description": "Get Component By Type",
                "produces": [
                    "application/json"
                ],
                "summary": "GetComponentByType",
                "operationId": "get-component-by-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Component type (e.g., l2geth)",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new component",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "CreateComponent",
                "operationId": "create-component",
                "parameters": [
                    {
                        "description": "Component data to create",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Component"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/components/{id}": {
            "get": {
                "description": "Get Component By ID",
                "summary": "GetComponentByID",
                "operationId": "get-component-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Component ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Delete Component By Id",
                "summary": "DeleteComponentById",
                "operationId": "delete-component-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Component ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/networks": {
            "get": {
                "description": "Get networks by page",
                "produces": [
                    "application/json"
                ],
                "summary": "GetNetworksByPage",
                "operationId": "get-networks-by-page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new network",
                "produces": [
                    "application/json"
                ],
                "summary": "CreateNetwork",
                "operationId": "create-network",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Network"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/networks/{id}": {
            "get": {
                "description": "Get a network by id",
                "produces": [
                    "application/json"
                ],
                "summary": "GetNetworkById",
                "operationId": "get-network-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Delete a network by id",
                "produces": [
                    "application/json"
                ],
                "summary": "DeleteNetwork",
                "operationId": "delete-network",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Component": {
            "type": "object",
            "required": [
                "network_id",
                "type"
            ],
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network_id": {
                    "type": "integer"
                },
                "public_url": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "model.Network": {
            "type": "object",
            "properties": {
                "contract_address_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "state_dump_url": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Titond",
	Description:      "Titond-backend application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
